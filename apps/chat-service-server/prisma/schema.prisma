datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model WebSocket {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessionId String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Group {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String?
  description  String?
  createdBy    String?
  groupMembers GroupMember[]
  messages     Message[]
}

model Message {
  id            String         @id @default(cuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  content       String?
  sender        String?
  isRead        Boolean?
  group         Group?         @relation(fields: [groupId], references: [id])
  groupId       String?
  notifications Notification[]
}

model GroupMember {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdmin   Boolean?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  group     Group?   @relation(fields: [groupId], references: [id])
  groupId   String?
}

model Notification {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isRead    Boolean?
  message   Message? @relation(fields: [messageId], references: [id])
  messageId String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  id            String         @id @default(cuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  firstName     String?
  lastName      String?
  username      String         @unique
  email         String?        @unique
  password      String
  roles         Json
  isOnline      Boolean?
  groupMembers  GroupMember[]
  webSockets    WebSocket[]
  notifications Notification[]
}
